write [%0->$$17, %0->$$19]
-- SINK_WRITE  |PARTITIONED|
  project ([$$17, $$19])
  -- STREAM_PROJECT  |PARTITIONED|
    assign [$$19] <- [function-call: hive:org.apache.hadoop.hive.ql.udf.UDFOPMultiply, Args:[0.2, %0->$$18]]
    -- ASSIGN  |PARTITIONED|
      exchange 
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        group by ([$$17 := %0->$$22]) decor ([]) {
                  aggregate [$$18] <- [function-call: hive:avg(FINAL), Args:[%0->$$21]]
                  -- AGGREGATE  |LOCAL|
                    nested tuple source
                    -- NESTED_TUPLE_SOURCE  |LOCAL|
               }
        -- EXTERNAL_GROUP_BY[$$22]  |PARTITIONED|
          exchange 
          -- HASH_PARTITION_EXCHANGE [$$22]  |PARTITIONED|
            group by ([$$22 := %0->$$2]) decor ([]) {
                      aggregate [$$21] <- [function-call: hive:avg(PARTIAL1), Args:[%0->$$5]]
                      -- AGGREGATE  |LOCAL|
                        nested tuple source
                        -- NESTED_TUPLE_SOURCE  |LOCAL|
                   }
            -- EXTERNAL_GROUP_BY[$$2]  |PARTITIONED|
              exchange 
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                data-scan [$$2, $$5]<-[$$1, $$2, $$3, $$4, $$5, $$6, $$7, $$8, $$9, $$10, $$11, $$12, $$13, $$14, $$15, $$16] <- default.lineitem
                -- DATASOURCE_SCAN  |PARTITIONED|
                  exchange 
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    empty-tuple-source
                    -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
write [%0->$$29]
-- SINK_WRITE  |PARTITIONED|
  project ([$$29])
  -- STREAM_PROJECT  |PARTITIONED|
    assign [$$29] <- [function-call: hive:org.apache.hadoop.hive.ql.udf.UDFOPDivide, Args:[%0->$$28, 7.0]]
    -- ASSIGN  |PARTITIONED|
      exchange 
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        group by ([]) decor ([]) {
                  aggregate [$$28] <- [function-call: hive:sum(FINAL), Args:[%0->$$31]]
                  -- AGGREGATE  |LOCAL|
                    nested tuple source
                    -- NESTED_TUPLE_SOURCE  |LOCAL|
               }
        -- EXTERNAL_GROUP_BY[]  |PARTITIONED|
          exchange 
          -- HASH_PARTITION_EXCHANGE []  |PARTITIONED|
            group by ([]) decor ([]) {
                      aggregate [$$31] <- [function-call: hive:sum(PARTIAL1), Args:[%0->$$17]]
                      -- AGGREGATE  |LOCAL|
                        nested tuple source
                        -- NESTED_TUPLE_SOURCE  |LOCAL|
                   }
            -- EXTERNAL_GROUP_BY[]  |PARTITIONED|
              exchange 
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                project ([$$17])
                -- STREAM_PROJECT  |PARTITIONED|
                  select (function-call: algebricks:lt, Args:[%0->$$16, %0->$$2])
                  -- STREAM_SELECT  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      join (function-call: algebricks:eq, Args:[%0->$$13, %0->$$1])
                      -- HYBRID_HASH_JOIN [$$13][$$1]  |PARTITIONED|
                        exchange 
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          project ([$$13, $$16, $$17])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange 
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              join (function-call: algebricks:eq, Args:[%0->$$13, %0->$$3])
                              -- HYBRID_HASH_JOIN [$$13][$$3]  |PARTITIONED|
                                exchange 
                                -- HASH_PARTITION_EXCHANGE [$$13]  |PARTITIONED|
                                  data-scan [$$13, $$16, $$17]<-[$$12, $$13, $$14, $$15, $$16, $$17, $$18, $$19, $$20, $$21, $$22, $$23, $$24, $$25, $$26, $$27] <- default.lineitem
                                  -- DATASOURCE_SCAN  |PARTITIONED|
                                    exchange 
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      empty-tuple-source
                                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                                exchange 
                                -- HASH_PARTITION_EXCHANGE [$$3]  |PARTITIONED|
                                  project ([$$3])
                                  -- STREAM_PROJECT  |PARTITIONED|
                                    select (function-call: algebricks:and, Args:[function-call: algebricks:eq, Args:[%0->$$6, Brand#23], function-call: algebricks:eq, Args:[%0->$$9, MED BOX]])
                                    -- STREAM_SELECT  |PARTITIONED|
                                      exchange 
                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                        data-scan [$$3, $$6, $$9]<-[$$3, $$4, $$5, $$6, $$7, $$8, $$9, $$10, $$11] <- default.part
                                        -- DATASOURCE_SCAN  |PARTITIONED|
                                          exchange 
                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                            empty-tuple-source
                                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                        exchange 
                        -- HASH_PARTITION_EXCHANGE [$$1]  |PARTITIONED|
                          data-scan [$$1, $$2]<-[$$1, $$2] <- default.lineitem_tmp
                          -- DATASOURCE_SCAN  |PARTITIONED|
                            exchange 
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              empty-tuple-source
                              -- EMPTY_TUPLE_SOURCE  |PARTITIONED|