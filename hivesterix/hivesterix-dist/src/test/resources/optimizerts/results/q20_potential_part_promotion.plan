write [%0->$$1]
-- SINK_WRITE  |PARTITIONED|
  exchange 
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    distinct ([%0->$$1])
    -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
      exchange 
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        order (ASC, %0->$$1) 
        -- STABLE_SORT [$$1(ASC)]  |PARTITIONED|
          exchange 
          -- HASH_PARTITION_EXCHANGE [$$1]  |PARTITIONED|
            project ([$$1])
            -- STREAM_PROJECT  |PARTITIONED|
              select (function-call: hive:org.apache.hadoop.hive.ql.udf.UDFLike, Args:[%0->$$2, forest%])
              -- STREAM_SELECT  |PARTITIONED|
                exchange 
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  data-scan [$$1, $$2]<-[$$1, $$2, $$3, $$4, $$5, $$6, $$7, $$8, $$9] <- default.part
                  -- DATASOURCE_SCAN  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      empty-tuple-source
                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
write [%0->$$17, %0->$$18, %0->$$20]
-- SINK_WRITE  |PARTITIONED|
  project ([$$17, $$18, $$20])
  -- STREAM_PROJECT  |PARTITIONED|
    assign [$$20] <- [function-call: hive:org.apache.hadoop.hive.ql.udf.UDFOPMultiply, Args:[0.5, %0->$$19]]
    -- ASSIGN  |PARTITIONED|
      exchange 
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        group by ([$$17 := %0->$$23; $$18 := %0->$$24]) decor ([]) {
                  aggregate [$$19] <- [function-call: hive:sum(FINAL), Args:[%0->$$22]]
                  -- AGGREGATE  |LOCAL|
                    nested tuple source
                    -- NESTED_TUPLE_SOURCE  |LOCAL|
               }
        -- EXTERNAL_GROUP_BY[$$23, $$24]  |PARTITIONED|
          exchange 
          -- HASH_PARTITION_EXCHANGE [$$23, $$24]  |PARTITIONED|
            group by ([$$23 := %0->$$2; $$24 := %0->$$3]) decor ([]) {
                      aggregate [$$22] <- [function-call: hive:sum(PARTIAL1), Args:[%0->$$5]]
                      -- AGGREGATE  |LOCAL|
                        nested tuple source
                        -- NESTED_TUPLE_SOURCE  |LOCAL|
                   }
            -- EXTERNAL_GROUP_BY[$$2, $$3]  |PARTITIONED|
              exchange 
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                project ([$$2, $$3, $$5])
                -- STREAM_PROJECT  |PARTITIONED|
                  select (function-call: algebricks:and, Args:[function-call: algebricks:ge, Args:[%0->$$11, 1994-01-01], function-call: algebricks:lt, Args:[%0->$$11, 1995-01-01]])
                  -- STREAM_SELECT  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      data-scan [$$2, $$3, $$5, $$11]<-[$$1, $$2, $$3, $$4, $$5, $$6, $$7, $$8, $$9, $$10, $$11, $$12, $$13, $$14, $$15, $$16] <- default.lineitem
                      -- DATASOURCE_SCAN  |PARTITIONED|
                        exchange 
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          empty-tuple-source
                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
write [%0->$$6, %0->$$7, %0->$$3]
-- SINK_WRITE  |PARTITIONED|
  project ([$$6, $$7, $$3])
  -- STREAM_PROJECT  |PARTITIONED|
    exchange 
    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
      join (function-call: algebricks:and, Args:[function-call: algebricks:eq, Args:[%0->$$1, %0->$$5], function-call: algebricks:eq, Args:[%0->$$2, %0->$$6]])
      -- HYBRID_HASH_JOIN [$$1, $$2][$$5, $$6]  |PARTITIONED|
        exchange 
        -- HASH_PARTITION_EXCHANGE [$$1, $$2]  |PARTITIONED|
          data-scan []<-[$$1, $$2, $$3] <- default.q20_tmp2
          -- DATASOURCE_SCAN  |PARTITIONED|
            exchange 
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              empty-tuple-source
              -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
        exchange 
        -- HASH_PARTITION_EXCHANGE [$$5, $$6]  |PARTITIONED|
          project ([$$5, $$6, $$7])
          -- STREAM_PROJECT  |PARTITIONED|
            exchange 
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              join (function-call: algebricks:eq, Args:[%0->$$4, %0->$$5])
              -- HYBRID_HASH_JOIN [$$4][$$5]  |PARTITIONED|
                exchange 
                -- HASH_PARTITION_EXCHANGE [$$4]  |PARTITIONED|
                  data-scan []<-[$$4] <- default.q20_tmp1
                  -- DATASOURCE_SCAN  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      empty-tuple-source
                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                exchange 
                -- HASH_PARTITION_EXCHANGE [$$5]  |PARTITIONED|
                  data-scan [$$5, $$6, $$7]<-[$$5, $$6, $$7, $$8, $$9] <- default.partsupp
                  -- DATASOURCE_SCAN  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      empty-tuple-source
                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
write [%0->$$1]
-- SINK_WRITE  |PARTITIONED|
  exchange 
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    distinct ([%0->$$1])
    -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
      exchange 
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        order (ASC, %0->$$1) 
        -- STABLE_SORT [$$1(ASC)]  |PARTITIONED|
          exchange 
          -- HASH_PARTITION_EXCHANGE [$$1]  |PARTITIONED|
            project ([$$1])
            -- STREAM_PROJECT  |PARTITIONED|
              select (function-call: algebricks:gt, Args:[%0->$$2, %0->$$3])
              -- STREAM_SELECT  |PARTITIONED|
                exchange 
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  data-scan []<-[$$1, $$2, $$3] <- default.q20_tmp3
                  -- DATASOURCE_SCAN  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      empty-tuple-source
                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
write [%0->$$3, %0->$$4]
-- SINK_WRITE  |PARTITIONED|
  exchange 
  -- SORT_MERGE_EXCHANGE [$$3(ASC) ]  |PARTITIONED|
    order (ASC, %0->$$3) 
    -- STABLE_SORT [$$3(ASC)]  |PARTITIONED|
      exchange 
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        project ([$$3, $$4])
        -- STREAM_PROJECT  |PARTITIONED|
          exchange 
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            join (function-call: algebricks:eq, Args:[%0->$$1, %0->$$2])
            -- HYBRID_HASH_JOIN [$$1][$$2]  |PARTITIONED|
              exchange 
              -- HASH_PARTITION_EXCHANGE [$$1]  |PARTITIONED|
                data-scan []<-[$$1] <- default.q20_tmp4
                -- DATASOURCE_SCAN  |PARTITIONED|
                  exchange 
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    empty-tuple-source
                    -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange 
              -- HASH_PARTITION_EXCHANGE [$$2]  |PARTITIONED|
                project ([$$2, $$3, $$4])
                -- STREAM_PROJECT  |PARTITIONED|
                  exchange 
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    join (function-call: algebricks:eq, Args:[%0->$$9, %0->$$5])
                    -- HYBRID_HASH_JOIN [$$9][$$5]  |PARTITIONED|
                      exchange 
                      -- HASH_PARTITION_EXCHANGE [$$9]  |PARTITIONED|
                        project ([$$9])
                        -- STREAM_PROJECT  |PARTITIONED|
                          select (function-call: algebricks:eq, Args:[%0->$$10, CANADA])
                          -- STREAM_SELECT  |PARTITIONED|
                            exchange 
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              data-scan [$$9, $$10]<-[$$9, $$10, $$11, $$12] <- default.nation
                              -- DATASOURCE_SCAN  |PARTITIONED|
                                exchange 
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  empty-tuple-source
                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                      exchange 
                      -- HASH_PARTITION_EXCHANGE [$$5]  |PARTITIONED|
                        data-scan [$$5, $$2, $$3, $$4]<-[$$2, $$3, $$4, $$5, $$6, $$7, $$8] <- default.supplier
                        -- DATASOURCE_SCAN  |PARTITIONED|
                          exchange 
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            empty-tuple-source
                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|