write [%0->$$20, %0->$$16, %0->$$26, %0->$$1, %0->$$13, %0->$$3, %0->$$17, %0->$$19, %0->$$21]
-- SINK_WRITE  |PARTITIONED|
  project ([$$20, $$16, $$26, $$1, $$13, $$3, $$17, $$19, $$21])
  -- STREAM_PROJECT  |PARTITIONED|
    exchange 
    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
      join (function-call: algebricks:eq, Args:[%0->$$1, %0->$$10])
      -- HYBRID_HASH_JOIN [$$1][$$10]  |PARTITIONED|
        exchange 
        -- HASH_PARTITION_EXCHANGE [$$1]  |PARTITIONED|
          project ([$$1, $$3])
          -- STREAM_PROJECT  |PARTITIONED|
            select (function-call: algebricks:and, Args:[function-call: algebricks:eq, Args:[%0->$$6, 15], function-call: hive:org.apache.hadoop.hive.ql.udf.UDFLike, Args:[%0->$$5, %BRASS]])
            -- STREAM_SELECT  |PARTITIONED|
              exchange 
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                data-scan [$$1, $$3, $$5, $$6]<-[$$1, $$2, $$3, $$4, $$5, $$6, $$7, $$8, $$9] <- default.part
                -- DATASOURCE_SCAN  |PARTITIONED|
                  exchange 
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    empty-tuple-source
                    -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
        exchange 
        -- HASH_PARTITION_EXCHANGE [$$10]  |PARTITIONED|
          project ([$$10, $$16, $$17, $$19, $$20, $$21, $$26, $$13])
          -- STREAM_PROJECT  |PARTITIONED|
            exchange 
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              join (function-call: algebricks:eq, Args:[%0->$$11, %0->$$15])
              -- HYBRID_HASH_JOIN [$$11][$$15]  |PARTITIONED|
                exchange 
                -- HASH_PARTITION_EXCHANGE [$$11]  |PARTITIONED|
                  data-scan [$$11, $$10, $$13]<-[$$10, $$11, $$12, $$13, $$14] <- default.partsupp
                  -- DATASOURCE_SCAN  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      empty-tuple-source
                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                exchange 
                -- HASH_PARTITION_EXCHANGE [$$15]  |PARTITIONED|
                  project ([$$15, $$16, $$17, $$19, $$20, $$21, $$26])
                  -- STREAM_PROJECT  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      join (function-call: algebricks:eq, Args:[%0->$$18, %0->$$25])
                      -- HYBRID_HASH_JOIN [$$18][$$25]  |PARTITIONED|
                        exchange 
                        -- HASH_PARTITION_EXCHANGE [$$18]  |PARTITIONED|
                          data-scan []<-[$$15, $$16, $$17, $$18, $$19, $$20, $$21] <- default.supplier
                          -- DATASOURCE_SCAN  |PARTITIONED|
                            exchange 
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              empty-tuple-source
                              -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                        exchange 
                        -- HASH_PARTITION_EXCHANGE [$$25]  |PARTITIONED|
                          project ([$$25, $$26])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange 
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              join (function-call: algebricks:eq, Args:[%0->$$22, %0->$$27])
                              -- HYBRID_HASH_JOIN [$$22][$$27]  |PARTITIONED|
                                exchange 
                                -- HASH_PARTITION_EXCHANGE [$$22]  |PARTITIONED|
                                  project ([$$22])
                                  -- STREAM_PROJECT  |PARTITIONED|
                                    select (function-call: algebricks:eq, Args:[%0->$$23, EUROPE])
                                    -- STREAM_SELECT  |PARTITIONED|
                                      exchange 
                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                        data-scan [$$23, $$22]<-[$$22, $$23, $$24] <- default.region
                                        -- DATASOURCE_SCAN  |PARTITIONED|
                                          exchange 
                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                            empty-tuple-source
                                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                                exchange 
                                -- HASH_PARTITION_EXCHANGE [$$27]  |PARTITIONED|
                                  data-scan [$$27, $$25, $$26]<-[$$25, $$26, $$27, $$28] <- default.nation
                                  -- DATASOURCE_SCAN  |PARTITIONED|
                                    exchange 
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      empty-tuple-source
                                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
write [%0->$$10, %0->$$11]
-- SINK_WRITE  |PARTITIONED|
  project ([$$10, $$11])
  -- STREAM_PROJECT  |PARTITIONED|
    exchange 
    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
      group by ([$$10 := %0->$$14]) decor ([]) {
                aggregate [$$11] <- [function-call: hive:min(FINAL), Args:[%0->$$13]]
                -- AGGREGATE  |LOCAL|
                  nested tuple source
                  -- NESTED_TUPLE_SOURCE  |LOCAL|
             }
      -- PRE_CLUSTERED_GROUP_BY[$$14]  |PARTITIONED|
        exchange 
        -- HASH_PARTITION_MERGE_EXCHANGE MERGE:[$$14(ASC)] HASH:[$$14]  |PARTITIONED|
          group by ([$$14 := %0->$$4]) decor ([]) {
                    aggregate [$$13] <- [function-call: hive:min(PARTIAL1), Args:[%0->$$5]]
                    -- AGGREGATE  |LOCAL|
                      nested tuple source
                      -- NESTED_TUPLE_SOURCE  |LOCAL|
                 }
          -- PRE_CLUSTERED_GROUP_BY[$$4]  |PARTITIONED|
            exchange 
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              order (ASC, %0->$$4) 
              -- STABLE_SORT [$$4(ASC)]  |PARTITIONED|
                exchange 
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  data-scan [$$4, $$5]<-[$$1, $$2, $$3, $$4, $$5, $$6, $$7, $$8, $$9] <- default.q2_minimum_cost_supplier_tmp1
                  -- DATASOURCE_SCAN  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      empty-tuple-source
                      -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
write [%0->$$3, %0->$$4, %0->$$5, %0->$$6, %0->$$8, %0->$$9, %0->$$10, %0->$$11]
-- SINK_WRITE  |UNPARTITIONED|
  limit 100
  -- STREAM_LIMIT  |UNPARTITIONED|
    limit 100
    -- STREAM_LIMIT  |UNPARTITIONED|
      exchange 
      -- SORT_MERGE_EXCHANGE [$$3(DESC), $$5(ASC), $$4(ASC), $$6(ASC) ]  |PARTITIONED|
        limit 100
        -- STREAM_LIMIT  |PARTITIONED|
          exchange 
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            order (DESC, %0->$$3) (ASC, %0->$$5) (ASC, %0->$$4) (ASC, %0->$$6) 
            -- STABLE_SORT [$$3(DESC), $$5(ASC), $$4(ASC), $$6(ASC)]  |PARTITIONED|
              exchange 
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                project ([$$3, $$4, $$5, $$6, $$8, $$9, $$10, $$11])
                -- STREAM_PROJECT  |PARTITIONED|
                  exchange 
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    join (function-call: algebricks:and, Args:[function-call: algebricks:eq, Args:[%0->$$1, %0->$$6], function-call: algebricks:eq, Args:[%0->$$2, %0->$$7]])
                    -- HYBRID_HASH_JOIN [$$1, $$2][$$6, $$7]  |PARTITIONED|
                      exchange 
                      -- HASH_PARTITION_EXCHANGE [$$1, $$2]  |PARTITIONED|
                        data-scan []<-[$$1, $$2] <- default.q2_minimum_cost_supplier_tmp2
                        -- DATASOURCE_SCAN  |PARTITIONED|
                          exchange 
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            empty-tuple-source
                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                      exchange 
                      -- HASH_PARTITION_EXCHANGE [$$6, $$7]  |PARTITIONED|
                        data-scan [$$6, $$7, $$3, $$4, $$5, $$8, $$9, $$10, $$11]<-[$$3, $$4, $$5, $$6, $$7, $$8, $$9, $$10, $$11] <- default.q2_minimum_cost_supplier_tmp1
                        -- DATASOURCE_SCAN  |PARTITIONED|
                          exchange 
                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                            empty-tuple-source
                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|